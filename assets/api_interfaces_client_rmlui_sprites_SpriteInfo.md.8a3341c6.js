import{_ as e,c as t,o as i,V as a}from"./chunks/framework.be58fd72.js";const b=JSON.parse('{"title":"AthenaClient.rmlui.sprites.SpriteInfo","description":"","frontmatter":{"title":"AthenaClient.rmlui.sprites.SpriteInfo","outline":[1,3],"order":0},"headers":[],"relativePath":"api/interfaces/client_rmlui_sprites_SpriteInfo.md","lastUpdated":null}'),r={name:"api/interfaces/client_rmlui_sprites_SpriteInfo.md"},n=a('<h1 id="athenaclient-rmlui-sprites-spriteinfo" tabindex="-1">AthenaClient.rmlui.sprites.SpriteInfo <a class="header-anchor" href="#athenaclient-rmlui-sprites-spriteinfo" aria-label="Permalink to &quot;AthenaClient.rmlui.sprites.SpriteInfo&quot;">​</a></h1><p><a href="./../modules/client_rmlui_sprites">client/rmlui/sprites</a>.SpriteInfo</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="callonceontouch" tabindex="-1">callOnceOnTouch <a class="header-anchor" href="#callonceontouch" aria-label="Permalink to &quot;callOnceOnTouch&quot;">​</a></h3><p>• <code>Optional</code> <strong>callOnceOnTouch</strong>: (<code>uid</code>: <code>string</code>) =&gt; <code>void</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>AthenaClient.rmlui.sprites.SpriteInfo.(<code>uid</code>): <code>void</code></p></div><p>Call this callback once, when the sprite is touched.</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>uid</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/70801b3/src/core/client/rmlui/sprites/index.ts#L55" target="_blank" rel="noreferrer">client/rmlui/sprites/index.ts:55</a></p><hr><h3 id="height" tabindex="-1">height <a class="header-anchor" href="#height" aria-label="Permalink to &quot;height&quot;">​</a></h3><p>• <strong>height</strong>: <code>number</code></p><p>The height of the image. Pixels.</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/70801b3/src/core/client/rmlui/sprites/index.ts#L40" target="_blank" rel="noreferrer">client/rmlui/sprites/index.ts:40</a></p><hr><h3 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h3><p>• <strong>path</strong>: <code>string</code></p><p>The path of the image we want to draw. Use <code>@plugin/plugin-name/client/image.png</code> for plugin based pathing. Otherwise paths are based on <code>../../../plugins/plugin-name/client/image.png</code>.</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/70801b3/src/core/client/rmlui/sprites/index.ts#L24" target="_blank" rel="noreferrer">client/rmlui/sprites/index.ts:24</a></p><hr><h3 id="position" tabindex="-1">position <a class="header-anchor" href="#position" aria-label="Permalink to &quot;position&quot;">​</a></h3><p>• <strong>position</strong>: <code>IVector3</code></p><p>A position in-world, or on-screen where to draw this image.</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/70801b3/src/core/client/rmlui/sprites/index.ts#L48" target="_blank" rel="noreferrer">client/rmlui/sprites/index.ts:48</a></p><hr><h3 id="uid" tabindex="-1">uid <a class="header-anchor" href="#uid" aria-label="Permalink to &quot;uid&quot;">​</a></h3><p>• <strong>uid</strong>: <code>string</code></p><p>A unique identifier for this sprite.</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/70801b3/src/core/client/rmlui/sprites/index.ts#L14" target="_blank" rel="noreferrer">client/rmlui/sprites/index.ts:14</a></p><hr><h3 id="width" tabindex="-1">width <a class="header-anchor" href="#width" aria-label="Permalink to &quot;width&quot;">​</a></h3><p>• <strong>width</strong>: <code>number</code></p><p>The width of the image. Pixels.</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/70801b3/src/core/client/rmlui/sprites/index.ts#L32" target="_blank" rel="noreferrer">client/rmlui/sprites/index.ts:32</a></p>',44),o=[n];function l(s,d,h,c,p,u){return i(),t("div",null,o)}const m=e(r,[["render",l]]);export{b as __pageData,m as default};
