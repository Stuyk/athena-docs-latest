import{_ as t,c as e,o as a,V as i}from"./chunks/framework.be58fd72.js";const m=JSON.parse('{"title":"AthenaClient.systems.notification","description":"","frontmatter":{"title":"AthenaClient.systems.notification","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/client_systems_notification.md","lastUpdated":null}'),n={name:"api/modules/client_systems_notification.md"},o=i('<h1 id="athenaclient-systems-notification" tabindex="-1">AthenaClient.systems.notification <a class="header-anchor" href="#athenaclient-systems-notification" aria-label="Permalink to &quot;AthenaClient.systems.notification&quot;">​</a></h1><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="notificationcallback" tabindex="-1">NotificationCallback <a class="header-anchor" href="#notificationcallback" aria-label="Permalink to &quot;NotificationCallback&quot;">​</a></h3><p>Ƭ <strong>NotificationCallback</strong>: (<code>message</code>: <code>string</code>, ...<code>args</code>: <code>any</code>[]) =&gt; <code>void</code> | <code>Function</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/90cd63d/src/core/client/systems/notification.ts#L5" target="_blank" rel="noreferrer">client/systems/notification.ts:5</a></p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="addcallback" tabindex="-1">addCallback <a class="header-anchor" href="#addcallback" aria-label="Permalink to &quot;addCallback&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>AthenaClient.systems.notification.<strong>addCallback</strong>(<code>callback</code>): <code>void</code></p></div><p>Call a function back when a notification is received.</p><p>Good for overwriting the default notification system and handling it on your own.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><a href="./client_systems_notification#NotificationCallback"><code>NotificationCallback</code></a></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/90cd63d/src/core/client/systems/notification.ts#L42" target="_blank" rel="noreferrer">client/systems/notification.ts:42</a></p><hr><h3 id="disabledefault" tabindex="-1">disableDefault <a class="header-anchor" href="#disabledefault" aria-label="Permalink to &quot;disableDefault&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>AthenaClient.systems.notification.<strong>disableDefault</strong>(): <code>void</code></p></div><p>Disable the default notification handler</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/90cd63d/src/core/client/systems/notification.ts#L30" target="_blank" rel="noreferrer">client/systems/notification.ts:30</a></p>',25),s=[o];function l(c,r,d,h,f,b){return a(),e("div",null,s)}const p=t(n,[["render",l]]);export{m as __pageData,p as default};
