import{_ as e,c as t,o as n,V as a}from"./chunks/framework.be58fd72.js";const _=JSON.parse('{"title":"AthenaClient.rmlui.menu.menuInterfaces.MenuInfo","description":"","frontmatter":{"title":"AthenaClient.rmlui.menu.menuInterfaces.MenuInfo","outline":[1,3],"order":0},"headers":[],"relativePath":"api/interfaces/client_rmlui_menu_menuInterfaces_MenuInfo.md","lastUpdated":null}'),r={name:"api/interfaces/client_rmlui_menu_menuInterfaces_MenuInfo.md"},o=a('<h1 id="athenaclient-rmlui-menu-menuinterfaces-menuinfo" tabindex="-1">AthenaClient.rmlui.menu.menuInterfaces.MenuInfo <a class="header-anchor" href="#athenaclient-rmlui-menu-menuinterfaces-menuinfo" aria-label="Permalink to &quot;AthenaClient.rmlui.menu.menuInterfaces.MenuInfo&quot;">​</a></h1><p><a href="./../modules/client_rmlui_menu_menuInterfaces">client/rmlui/menu/menuInterfaces</a>.MenuInfo</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="callbackonclose" tabindex="-1">callbackOnClose <a class="header-anchor" href="#callbackonclose" aria-label="Permalink to &quot;callbackOnClose&quot;">​</a></h3><p>• <code>Optional</code> <strong>callbackOnClose</strong>: <code>Function</code></p><p>Function to call when the menu is closed through other means.</p><p><strong><code>Memberof</code></strong></p><p>MenuInfo</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/55b6185/src/core/client/rmlui/menu/menuInterfaces.ts#L168" target="_blank" rel="noreferrer">client/rmlui/menu/menuInterfaces.ts:168</a></p><hr><h3 id="header" tabindex="-1">header <a class="header-anchor" href="#header" aria-label="Permalink to &quot;header&quot;">​</a></h3><p>• <strong>header</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">The banner background color of this menu.</td></tr><tr><td style="text-align:left;"><code>title</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The title of this menu.</td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/55b6185/src/core/client/rmlui/menu/menuInterfaces.ts#L138" target="_blank" rel="noreferrer">client/rmlui/menu/menuInterfaces.ts:138</a></p><hr><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><p>• <strong>options</strong>: (<a href="./client_rmlui_menu_menuInterfaces_Selection"><code>Selection</code></a> | <a href="./client_rmlui_menu_menuInterfaces_Range"><code>Range</code></a> | <a href="./client_rmlui_menu_menuInterfaces_Toggle"><code>Toggle</code></a> | <a href="./client_rmlui_menu_menuInterfaces_Invoke"><code>Invoke</code></a> | <a href="./client_rmlui_menu_menuInterfaces_Input"><code>Input</code></a>)[]</p><p>An array of available menu types to invoke.</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/55b6185/src/core/client/rmlui/menu/menuInterfaces.ts#L160" target="_blank" rel="noreferrer">client/rmlui/menu/menuInterfaces.ts:160</a></p>',23),l=[o];function i(c,u,s,d,h,m){return n(),t("div",null,l)}const p=e(r,[["render",i]]);export{_ as __pageData,p as default};
