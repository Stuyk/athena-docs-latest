import{_ as e,c as t,o as a,V as r}from"./chunks/framework.be58fd72.js";const b=JSON.parse('{"title":"AthenaShared.utility.deepCopy","description":"","frontmatter":{"title":"AthenaShared.utility.deepCopy","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/shared_utility_deepCopy.md","lastUpdated":null}'),d={name:"api/modules/shared_utility_deepCopy.md"},o=r('<h1 id="athenashared-utility-deepcopy" tabindex="-1">AthenaShared.utility.deepCopy <a class="header-anchor" href="#athenashared-utility-deepcopy" aria-label="Permalink to &quot;AthenaShared.utility.deepCopy&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="deepclonearray" tabindex="-1">deepCloneArray <a class="header-anchor" href="#deepclonearray" aria-label="Permalink to &quot;deepCloneArray&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>AthenaShared.utility.deepCopy.<strong>deepCloneArray</strong>&lt;<code>T</code>&gt;(<code>data</code>): <code>T</code>[]</p></div><p>Makes a complete copy of an array and all objects.</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;">(<code>object</code> | <code>T</code>)[]</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code>[]</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/380b7cf/src/core/shared/utility/deepCopy.ts#L29" target="_blank" rel="noreferrer">shared/utility/deepCopy.ts:29</a></p><hr><h3 id="deepcloneobject" tabindex="-1">deepCloneObject <a class="header-anchor" href="#deepcloneobject" aria-label="Permalink to &quot;deepCloneObject&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>AthenaShared.utility.deepCopy.<strong>deepCloneObject</strong>&lt;<code>T</code>&gt;(<code>data</code>): <code>T</code></p></div><p>Used to deep clone an object and detach all references. Does not work with functions. This is required to prevent data from being modified in other items.</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>object</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/380b7cf/src/core/shared/utility/deepCopy.ts#L9" target="_blank" rel="noreferrer">shared/utility/deepCopy.ts:9</a></p>',25),l=[o];function i(n,s,h,c,p,u){return a(),t("div",null,l)}const f=e(d,[["render",i]]);export{b as __pageData,f as default};
