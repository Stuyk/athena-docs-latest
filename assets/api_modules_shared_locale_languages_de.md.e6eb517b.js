import{_ as e,c as a,o as t,V as l}from"./chunks/framework.be58fd72.js";const f=JSON.parse('{"title":"AthenaShared.locale.languages.de","description":"","frontmatter":{"title":"AthenaShared.locale.languages.de","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/shared_locale_languages_de.md","lastUpdated":null}'),r={name:"api/modules/shared_locale_languages_de.md"},o=l('<h1 id="athenashared-locale-languages-de" tabindex="-1">AthenaShared.locale.languages.de <a class="header-anchor" href="#athenashared-locale-languages-de" aria-label="Permalink to &quot;AthenaShared.locale.languages.de&quot;">​</a></h1><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><h3 id="default" tabindex="-1">default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;default&quot;">​</a></h3><p>• <strong>default</strong>: <code>Object</code></p><p>Locales are written with a key and value type. When you get the key of &#39;greet-user&#39; from the LocaleController It will return a string of &#39;Hello someVariableYouPass, welcome to the server.&#39; It&#39;s a simple way to create locales without hurting performance too much.</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/55b6185/src/core/shared/locale/languages/de.ts#L9" target="_blank" rel="noreferrer">shared/locale/languages/de.ts:9</a></p>',7),n=[o];function s(d,h,i,c,u,_){return t(),a("div",null,n)}const p=e(r,[["render",s]]);export{f as __pageData,p as default};
