import{_ as t,c as e,o,V as a}from"./chunks/framework.be58fd72.js";const g=JSON.parse('{"title":"AthenaClient.world.position","description":"","frontmatter":{"title":"AthenaClient.world.position","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/client_world_position.md","lastUpdated":null}'),l={name:"api/modules/client_world_position.md"},i=a('<h1 id="athenaclient-world-position" tabindex="-1">AthenaClient.world.position <a class="header-anchor" href="#athenaclient-world-position" aria-label="Permalink to &quot;AthenaClient.world.position&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="getgroundz" tabindex="-1">getGroundZ <a class="header-anchor" href="#getgroundz" aria-label="Permalink to &quot;getGroundZ&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>AthenaClient.world.position.<strong>getGroundZ</strong>(<code>pos</code>, <code>options?</code>): <code>alt.IVector3</code></p></div><p>Returns a Vector3 with a modified z position if the ground position is found.</p><p>Otherwise, returns the original Vector3.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pos</code></td><td style="text-align:left;"><code>IVector3</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">A position in the world.</td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;"><code>DefaultData</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>options.increment</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"><code>1</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>options.iterations</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"><code>10</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>options.minStart</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"><code>5</code></td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>alt.IVector3</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/2435881/src/core/client/world/position.ts#L21" target="_blank" rel="noreferrer">client/world/position.ts:21</a></p><hr><h3 id="isentityblockingposition" tabindex="-1">isEntityBlockingPosition <a class="header-anchor" href="#isentityblockingposition" aria-label="Permalink to &quot;isEntityBlockingPosition&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>AthenaClient.world.position.<strong>isEntityBlockingPosition</strong>(<code>pos</code>, <code>range?</code>, <code>maxDistance?</code>): <code>boolean</code></p></div><p>Check if an entity is in front of the position the camera is looking at. Should be used periodically and not in an every tick. Could be expensive.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pos</code></td><td style="text-align:left;"><code>IVector3</code></td><td style="text-align:left;"><code>undefined</code></td></tr><tr><td style="text-align:left;"><code>range</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"><code>0.8</code></td></tr><tr><td style="text-align:left;"><code>maxDistance</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;"><code>100</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/2435881/src/core/client/world/position.ts#L43" target="_blank" rel="noreferrer">client/world/position.ts:43</a></p>',22),n=[i];function d(r,s,c,h,p,f){return o(),e("div",null,n)}const b=t(l,[["render",d]]);export{g as __pageData,b as default};
