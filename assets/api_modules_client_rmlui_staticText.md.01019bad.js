import{_ as t,c as e,o as a,V as i}from"./chunks/framework.be58fd72.js";const f=JSON.parse('{"title":"AthenaClient.rmlui.staticText","description":"","frontmatter":{"title":"AthenaClient.rmlui.staticText","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/client_rmlui_staticText.md","lastUpdated":null}'),r={name:"api/modules/client_rmlui_staticText.md"},l=i('<h1 id="athenaclient-rmlui-statictext" tabindex="-1">AthenaClient.rmlui.staticText <a class="header-anchor" href="#athenaclient-rmlui-statictext" aria-label="Permalink to &quot;AthenaClient.rmlui.staticText&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="remove" tabindex="-1">remove <a class="header-anchor" href="#remove" aria-label="Permalink to &quot;remove&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>AthenaClient.rmlui.staticText.<strong>remove</strong>(<code>uid</code>): <code>void</code></p></div><p>Remove static text based on uid. Marks for deletion, and then removes it.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>uid</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A unique string</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/7cb341a/src/core/client/rmlui/staticText/index.ts#L121" target="_blank" rel="noreferrer">client/rmlui/staticText/index.ts:121</a></p><hr><h3 id="upsert" tabindex="-1">upsert <a class="header-anchor" href="#upsert" aria-label="Permalink to &quot;upsert&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>AthenaClient.rmlui.staticText.<strong>upsert</strong>(<code>drawable</code>): <code>void</code></p></div><p>Create in-world static text. If the same uid is used it will simply replace the object.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>drawable</code></td><td style="text-align:left;"><a href="./../interfaces/client_rmlui_staticText_staticTextInterfaces_StaticTextInfo"><code>StaticTextInfo</code></a></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/7cb341a/src/core/client/rmlui/staticText/index.ts#L90" target="_blank" rel="noreferrer">client/rmlui/staticText/index.ts:90</a></p>',21),n=[l];function s(o,d,c,h,u,m){return a(),e("div",null,n)}const x=t(r,[["render",s]]);export{f as __pageData,x as default};
