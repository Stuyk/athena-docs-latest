import{_ as a,c as t,o as s,V as o,C as e,a as n}from"./chunks/framework.be58fd72.js";const D=JSON.parse('{"title":"Keeping Athena Updated","description":"","frontmatter":{"title":"Keeping Athena Updated","order":-94},"headers":[],"relativePath":"tutorials/free/setup/staying-up-to-date.md","lastUpdated":1702040089000}'),l={name:"tutorials/free/setup/staying-up-to-date.md"},r=o(`<h1 id="keeping-athena-updated" tabindex="-1">Keeping Athena Updated <a class="header-anchor" href="#keeping-athena-updated" aria-label="Permalink to &quot;Keeping Athena Updated&quot;">​</a></h1><h2 id="quick-update-instructions" tabindex="-1">Quick Update Instructions <a class="header-anchor" href="#quick-update-instructions" aria-label="Permalink to &quot;Quick Update Instructions&quot;">​</a></h2><p>How to pull latest Athena updates from a specific branch.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git remote add upstream </span><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//github.com/Stuyk/altv-athena</span></span>
<span class="line"><span style="color:#A6ACCD;">git remote set</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">url </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">push upstream DISABLE</span></span>
<span class="line"><span style="color:#A6ACCD;">git fetch upstream </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">all</span></span>
<span class="line"><span style="color:#A6ACCD;">git pull upstream the_branch_you_want</span></span></code></pre></div><p>If you modified files, you may have <code>merge conflicts</code>. Google it.</p><h2 id="why-update" tabindex="-1">Why Update? <a class="header-anchor" href="#why-update" aria-label="Permalink to &quot;Why Update?&quot;">​</a></h2><p>Well in most cases Athena is constantly moving forward with security patches, algorithm improvements, and new features. There is often a dedicated development branch that Stuyk and the community are constantly pushing changes into.</p><p>If you do not update you run the risk of your game mode becoming out-of-date and unmanageable in the foreseeable future.</p><p>Want evidence of this? As the author of Athena I&#39;ve witnessed my old game mode become completely unplayable after 6 months time of not updating. Too many features have become out-of-date and API changes have made it near impossible to update.</p><p>So... what does the author recommend?</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Stay up-to-date or risk the game mode breaking. Learn <code>git</code> and your time with Athena will be much better for you and your pathway to becoming a better developer.</p></div><h3 id="how-do-i-update" tabindex="-1">How do I Update? <a class="header-anchor" href="#how-do-i-update" aria-label="Permalink to &quot;How do I Update?&quot;">​</a></h3><p>When you cloned your private fork of the Athena Framework you should have ran this in a terminal:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git remote add upstream </span><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//github.com/Stuyk/altv-athena</span></span>
<span class="line"><span style="color:#A6ACCD;">git remote set</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">url </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">push upstream DISABLE</span></span></code></pre></div><p>Instead of disabling the push upstream, you can also set this to your origin repository.</p><p>An example of how to change the remote push URL is here:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git remote set</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">url </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">push origin your_repository_url</span></span></code></pre></div><p>After running this in a terminal you are now hooked up to the main repository to pull updates from.</p><p>You will first need to commit any changes that you have made on your private fork.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git add </span><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">I made some changes, this is what I did here</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">git push origin master</span></span></code></pre></div><p><em>If you run into errors will doing the above, google it. Seriously.</em></p><h3 id="fetching-upstream" tabindex="-1">Fetching Upstream <a class="header-anchor" href="#fetching-upstream" aria-label="Permalink to &quot;Fetching Upstream&quot;">​</a></h3><p>Pulling from upstream means that you are going to take the changes from the main Athena repository and smash them into your current repository.</p><h4 id="merging-from-master" tabindex="-1">Merging from Master <a class="header-anchor" href="#merging-from-master" aria-label="Permalink to &quot;Merging from Master&quot;">​</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git fetch upstream</span></span>
<span class="line"><span style="color:#A6ACCD;">git pull upstream master</span></span></code></pre></div><h4 id="merging-from-a-development-branch" tabindex="-1">Merging from a Development Branch <a class="header-anchor" href="#merging-from-a-development-branch" aria-label="Permalink to &quot;Merging from a Development Branch&quot;">​</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git fetch upstream</span></span>
<span class="line"><span style="color:#A6ACCD;">git pull upstream branch_version_goes_here</span></span></code></pre></div><h3 id="now-i-have-merge-conflicts" tabindex="-1">Now I Have Merge Conflicts? <a class="header-anchor" href="#now-i-have-merge-conflicts" aria-label="Permalink to &quot;Now I Have Merge Conflicts?&quot;">​</a></h3><p>Yes, you should normally have merge conflicts. This is the part where you absolutely must learn the tools that you are using. Merge conflicts means there is a difference between your current repository and the other repository which you pulled code from.</p><p>This means you will be fixing merge conflicts by using VSCode to help identify and fix them. You will need to figure out where all the merge conflicts are and resolve them based on what you need.</p><p>tl;dr - Watch this video below on how to manage merge conflicts.</p>`,31),p=e("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/QmKdodJU-js",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),i=e("h3",{id:"after-resolving-merge-conflicts",tabindex:"-1"},[n("After Resolving Merge Conflicts? "),e("a",{class:"header-anchor",href:"#after-resolving-merge-conflicts","aria-label":'Permalink to "After Resolving Merge Conflicts?"'},"​")],-1),c=e("p",null,"You should make a new commit and push the changes up to your private repository.",-1),h=e("p",null,"That's it.",-1),d=[r,p,i,c,h];function u(m,g,y,f,C,b){return s(),t("div",null,d)}const v=a(l,[["render",u]]);export{D as __pageData,v as default};
