import{_ as e,c as a,o as t,V as r}from"./chunks/framework.be58fd72.js";const u=JSON.parse('{"title":"Athena.vehicle.get","description":"","frontmatter":{"title":"Athena.vehicle.get","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/server_vehicle_get.md","lastUpdated":null}'),l={name:"api/modules/server_vehicle_get.md"},s=r(`<h1 id="athena-vehicle-get" tabindex="-1">Athena.vehicle.get <a class="header-anchor" href="#athena-vehicle-get" aria-label="Permalink to &quot;Athena.vehicle.get&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="ownedvehiclebydatabaseid" tabindex="-1">ownedVehicleByDatabaseID <a class="header-anchor" href="#ownedvehiclebydatabaseid" aria-label="Permalink to &quot;ownedVehicleByDatabaseID&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.vehicle.get.<strong>ownedVehicleByDatabaseID</strong>(<code>id</code>): <code>Promise</code>&lt;<a href="./server_config#player"><code>player</code></a>&gt;</p></div><p>Returns an owned vehicle by Database ID.</p><p><strong><code>Export</code></strong></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code> | <code>number</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./server_config#player"><code>player</code></a>&gt;</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/0a4b65e/src/core/server/vehicle/get.ts#L96" target="_blank" rel="noreferrer">server/vehicle/get.ts:96</a></p><hr><h3 id="ownedvehiclebydocumentid" tabindex="-1">ownedVehicleByDocumentID <a class="header-anchor" href="#ownedvehiclebydocumentid" aria-label="Permalink to &quot;ownedVehicleByDocumentID&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.vehicle.get.<strong>ownedVehicleByDocumentID</strong>(<code>_id</code>): <code>Promise</code>&lt;<a href="./server_config#player"><code>player</code></a>&gt;</p></div><p>Returns an owned vehicle by Document ID.</p><p><strong><code>Export</code></strong></p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>_id</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./server_config#player"><code>player</code></a>&gt;</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/0a4b65e/src/core/server/vehicle/get.ts#L85" target="_blank" rel="noreferrer">server/vehicle/get.ts:85</a></p><hr><h3 id="ownedvehiclesbyplayer" tabindex="-1">ownedVehiclesByPlayer <a class="header-anchor" href="#ownedvehiclesbyplayer" aria-label="Permalink to &quot;ownedVehiclesByPlayer&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.vehicle.get.<strong>ownedVehiclesByPlayer</strong>&lt;<code>T</code>&gt;(<code>playerOrDocumentID</code>): <code>Promise</code>&lt;<code>T</code>[]&gt;</p></div><p>Returns a list of vehicle documents owned by the player.</p><p><strong><code>Export</code></strong></p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>OwnedVehicle</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>playerOrDocumentID</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>T</code>[]&gt;</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/0a4b65e/src/core/server/vehicle/get.ts#L185" target="_blank" rel="noreferrer">server/vehicle/get.ts:185</a></p><hr><h3 id="spawnedvehiclebydatabaseid" tabindex="-1">spawnedVehicleByDatabaseID <a class="header-anchor" href="#spawnedvehiclebydatabaseid" aria-label="Permalink to &quot;spawnedVehicleByDatabaseID&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.vehicle.get.<strong>spawnedVehicleByDatabaseID</strong>(<code>id</code>): <code>alt.Vehicle</code> | <code>undefined</code></p></div><p>Returns a spawned vehicle by their database identifier.</p><p>Not to be confused with <code>_id</code>.</p><p><strong><code>Export</code></strong></p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code> | <code>number</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>alt.Vehicle</code> | <code>undefined</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/0a4b65e/src/core/server/vehicle/get.ts#L28" target="_blank" rel="noreferrer">server/vehicle/get.ts:28</a></p><hr><h3 id="spawnedvehiclebydocumentid" tabindex="-1">spawnedVehicleByDocumentID <a class="header-anchor" href="#spawnedvehiclebydocumentid" aria-label="Permalink to &quot;spawnedVehicleByDocumentID&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.vehicle.get.<strong>spawnedVehicleByDocumentID</strong>(<code>_id</code>): <code>alt.Vehicle</code> | <code>undefined</code></p></div><p>Returns a spawned vehicle by their unique database <code>_id</code>.</p><p><strong><code>Export</code></strong></p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>_id</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>alt.Vehicle</code> | <code>undefined</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/0a4b65e/src/core/server/vehicle/get.ts#L61" target="_blank" rel="noreferrer">server/vehicle/get.ts:61</a></p><hr><h3 id="spawnedvehiclebyentityid" tabindex="-1">spawnedVehicleByEntityID <a class="header-anchor" href="#spawnedvehiclebyentityid" aria-label="Permalink to &quot;spawnedVehicleByEntityID&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.vehicle.get.<strong>spawnedVehicleByEntityID</strong>(<code>id</code>): <code>any</code></p></div><p>Used the internal alt:V Identifiers to find a vehicle.</p><p>These IDs always change, and are never the same.</p><p><strong><code>Export</code></strong></p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>any</code></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/0a4b65e/src/core/server/vehicle/get.ts#L15" target="_blank" rel="noreferrer">server/vehicle/get.ts:15</a></p><hr><h3 id="temporaryvehicles" tabindex="-1">temporaryVehicles <a class="header-anchor" href="#temporaryvehicles" aria-label="Permalink to &quot;temporaryVehicles&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.vehicle.get.<strong>temporaryVehicles</strong>(): <code>alt.Vehicle</code>[]</p></div><p>Get all temporary vehicles.</p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> vehicles </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vehicle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">temporaryVehicles</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>alt.Vehicle</code>[]</p><p>An array of temporary vehicles.</p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/0a4b65e/src/core/server/vehicle/get.ts#L120" target="_blank" rel="noreferrer">server/vehicle/get.ts:120</a></p><hr><h3 id="vehiclesspawnedbyplayer" tabindex="-1">vehiclesSpawnedByPlayer <a class="header-anchor" href="#vehiclesspawnedbyplayer" aria-label="Permalink to &quot;vehiclesSpawnedByPlayer&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.vehicle.get.<strong>vehiclesSpawnedByPlayer</strong>(<code>playerOrDocumentID</code>): <code>any</code></p></div><p>Takes a player instance, or <code>_id</code> and returns all spawned &amp; owned vehicles</p><h4 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">something</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">player</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">alt</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Player</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">vehicles</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vehicle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">vehiclesSpawnedByPlayer</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>playerOrDocumentID</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>any</code></p><p>An array of vehicles owned and spawned by a player.</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/0a4b65e/src/core/server/vehicle/get.ts#L157" target="_blank" rel="noreferrer">server/vehicle/get.ts:157</a></p><hr><h3 id="vehicleswithownership" tabindex="-1">vehiclesWithOwnership <a class="header-anchor" href="#vehicleswithownership" aria-label="Permalink to &quot;vehiclesWithOwnership&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.vehicle.get.<strong>vehiclesWithOwnership</strong>(): <code>alt.Vehicle</code>[]</p></div><p>Get all owned vehicles.</p><h4 id="example-2" tabindex="-1">Example <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> vehicles </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vehicle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">vehiclesWithOwnership</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>alt.Vehicle</code>[]</p><p>An array of owned vehicles.</p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/0a4b65e/src/core/server/vehicle/get.ts#L137" target="_blank" rel="noreferrer">server/vehicle/get.ts:137</a></p>`,106),o=[s];function n(i,c,d,h,p,y){return t(),a("div",null,o)}const m=e(l,[["render",n]]);export{u as __pageData,m as default};
